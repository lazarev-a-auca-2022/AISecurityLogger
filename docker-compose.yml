services:
  ai-security-logger:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-security-logger
    restart: unless-stopped
    environment:
      # AI Provider Configuration
      - AI_PROVIDER=${AI_PROVIDER:-google}
      # OpenRouter Configuration
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_MODEL_ID=${OPENROUTER_MODEL_ID:-openai/gpt-3.5-turbo}
      - OPENROUTER_BASE_URL=${OPENROUTER_BASE_URL:-https://openrouter.ai/api/v1}
      # Google AI Configuration
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GOOGLE_MODEL_ID=${GOOGLE_MODEL_ID:-gemini-2.5-flash-preview-05-20}
      - GOOGLE_BASE_URL=${GOOGLE_BASE_URL:-https://generativelanguage.googleapis.com}
      - GOOGLE_API_VERSION=${GOOGLE_API_VERSION:-v1}
      # OpenAI Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL_ID=${OPENAI_MODEL_ID:-gpt-4o-mini}
      # Azure Configuration
      - AZURE_API_KEY=${AZURE_API_KEY}
      - AZURE_MODEL_ID=${AZURE_MODEL_ID}
      - AZURE_BASE_URL=${AZURE_BASE_URL}
      - AZURE_API_VERSION=${AZURE_API_VERSION}
      - AZURE_DEPLOYMENT_NAME=${AZURE_DEPLOYMENT_NAME}
      # Anthropic Configuration
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ANTHROPIC_MODEL_ID=${ANTHROPIC_MODEL_ID}
      # Custom Provider Configuration
      - CUSTOM_API_KEY=${CUSTOM_API_KEY}
      - CUSTOM_MODEL_ID=${CUSTOM_MODEL_ID}
      - CUSTOM_BASE_URL=${CUSTOM_BASE_URL}
      # Log Sources Configuration
      - LOG_SOURCES=/app/data/logs
      - PROCESSING_INTERVAL=60
      - SENSITIVITY_KEYWORDS=error,failed,denied,warning,critical,unauthorized,attack,breach,malware,virus
      - DB_PATH=/app/data/db/threats.db
      - OUTPUT_LOG_DIR=/app/reports
      - HEALTH_CHECK_PORT=5356
    volumes:
      # Mount log sources (adjust paths as needed for your server)
      - /var/log:/host/var/log:ro
      - ./data/logs:/app/data/logs
      - ./data/db:/app/data/db
      - ./reports:/app/reports
      - ./config:/app/config
      - ./.env:/app/.env
    ports:
      - "5358:5356"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5356/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - ai-logger-network
    depends_on:
      - redis
    
  redis:
    image: redis:7-alpine
    container_name: ai-logger-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - ai-logger-network
    ports:
      - "6379:6379"

  # Optional: Simple web interface for viewing reports
  nginx:
    image: nginx:alpine
    container_name: ai-logger-nginx
    restart: unless-stopped
    ports:
      - "8359:80"  # Using port 8359 which is less likely to be intercepted
    volumes:
      - ./reports:/usr/share/nginx/html/reports:ro
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - ai-logger-network
    depends_on:
      - ai-security-logger

volumes:
  redis_data:

networks:
  ai-logger-network:
    driver: bridge
